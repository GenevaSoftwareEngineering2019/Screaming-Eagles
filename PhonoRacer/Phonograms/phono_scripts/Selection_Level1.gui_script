--[[function init(self)
	msg.post("#", "hide_Selection")
	self.active = false
end

function update(self, dt)
	p = go.get_position()
	p.x = p.x + speed * dt
	go.set_position(p)
	if p.x <= -300 then
		p.x = 2000
		go.set_position(p)
		msg.post("#", "Count")
		i = i + 1
		print (i)
		return i
	end
end
local function phonogram(self, letter1, letter2)
	local Phono1 = gui.get_node("text1")
	local Phono2 = gui.get_node("text2")
	gui.set_text(Phono1, "letter1")
	gui.set_text(Phono2, "letter2")
	local letters = {"letter1", "letter2"}
	pickedSound = "Selection#" .. letters[ math.random( #letters ) ]
	msg.post(pickedSound, "play_sound", {delay = 2, gain = 0.5})
end
	
function on_message(self, message_id, message, sender)
	if message_id == hash("show_Selection") then
		msg.post("#", "enable")
		self.active = true
		msg.post(".", "acquire_input_focus")
	elseif message_id == hash("hide_Selection") then
		msg.post("#", "disable")
		self.active = false
	end
	if message_id == hash("Count") then
		if i == 1 then
			local Phono1 = gui.get_node("text1")
			local Phono2 = gui.get_node("text2")
			gui.set_text(Phono1, "A")
			gui.set_text(Phono2, "C")
			local letters = {"00", "07"}
			pickedSound = "Selection#" .. letters[ math.random( #letters ) ]
			msg.post(pickedSound, "play_sound", {delay = 2, gain = 0.5})
		elseif i == 2 then
			local Phono1 = gui.get_node("text1")
			local Phono2 = gui.get_node("text2")
			gui.set_text(Phono1, "B")
			ggui.set_text(Phono2, "C")
			local Phono2 = gui.get_node("text2")
			gui.set_text(Phono1, "A")
			gui.set_text(Phono2, "C")
			local letters = {"00", "07"}
			pickedSound = "Selection#" .. letters[ math.random( #letters ) ]
			msg.post(pickedSound, "play_sound", {delay = 2, gain = 0.5})t(Phono2, "D")
			local letters = {"06", "11"}
			pickedSound = "Selection#" .. letters[ math.random( #letters ) ]
			msg.post(pickedSound, "play_sound", {delay = 2, gain = 0.5})
		elseif i == 3 then
			local Phono1 = gui.get_node("text1")
			local Phono2 = gui.get_node("text2")
			gui.set_text(Phono1, "L")
			gui.set_text(Phono2, "F")
			local letters = {"24", "35"}
			pickedSound = "Selection#" .. letters[ math.random( #letters ) ]
			msg.post(pickedSound, "play_sound", {delay = 2, gain = 0.5})
		end
	end
end

function on_input(self, action_id, action)
--testing input
if action_id == hash("click") and action.pressed and self.active then
	local Phono1 = gui.get_node("Phono1")
	local Phono2 = gui.get_node("Phono2")
	if gui.pick_node(Phono1, action.x, action.y) then
--		if Phono1.Text = pickedSound
		--then
			msg.post("Selection#Congratulations", "play_sound", {delay = 0, gain = 0.5})
			msg.post("#", "hide_Selection")
		--elseif 
			--msg.post("Selection#Bettter luck next time", "play_sound", {delay = 0, gain = 0.5})
		--	msg.post("#", "hide_Selection")
		--end
	elseif gui.pick_node(Phono2, action.x, action.y) then
		--if Phono2.Text = pickedSound
		--then
			msg.post("Selection#Congratulations", "play_sound", {delay = 0, gain = 0.5})
			msg.post("#", "hide_Selection")
		--elseif 
			--msg.post("Selection#Bettter luck next time", "play_sound", {delay = 0, gain = 0.5})
			--msg.post("#", "hide_Selection")
		--end
	end

	msg.post("default:/GamescreenProxy#GamescreenLoader", "Resume")
end
end ]]--
function init(self)
	msg.post("#", "hide_Selection")
	self.active = false
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show_Selection") then
		msg.post("#", "enable")
		self.active = true
		msg.post(".", "acquire_input_focus")
	elseif message_id == hash("hide_Selection") then
		msg.post("#", "disable")
		self.active = false
	end

	-- deprecated method
	--[[
	local Phono1 = gui.get_node("text1")
	local Phono2 = gui.get_node("text2")
	gui.set_text(Phono1, "A")
	gui.set_text(Phono2, "C")
	--]]

	--lua tables begin at 1, not 0, and the total size of the current 
	-- table in phontab is 8
	-- for some reason ind1 is always 1 ??
	-- set int1 random to 1 - n/2,
	-- set int2 random to n/2+1 - total

	-- total is the number of values to select from
	-- randomseed needs to be called twice for two different numbers

	total = 70
	total2 = total - 1
	n1 = total2 / 2
	n2 = n1 + 1
	math.randomseed(os.time() * 123456)
	--ind1 = math.random(1, n1)
	ind1 = math.random(1, total)
	math.randomseed(os.clock() * 420)
	--ind2 = math.random(n2, total)
	ind2 = math.random(1, total)	
	ind3 = math.random(1, 3)

	-- attempts to ensure neither number is the same
	-- messy and does not currently work
	--[[
	if ind1 == ind2 then
		math.randomseed(os.time())
		ind2 = math.randomseed(1, total)
	elseif ind1 ~= in2 then

		local Phono1 = gui.get_node("text1")
		local Phono2 = gui.get_node("text2")
		gui.set_text(Phono1, ind1)
		gui.set_text(Phono2, ind2)

		math.randomseed(os.time())	
	end
	--]]


	-- feed ind1 and ind2 to either collection factory or phontab table, or print to text
	local Phono1 = gui.get_node("text1")
	local Phono2 = gui.get_node("text2")
	gui.set_text(Phono1, ind1)
	gui.set_text(Phono2, ind2)
	local letters = {“00”, “01”, “02”, “03”, “04”, “05”, “06”, “07”, “08”, “09”, “10”, “11”, “12”, “13”, “14”, “15”, “16”, “17”, “18”, “19”, “20”, “21”, “22”, “23”, “24”, “25”, “26”, “27”, “28”, “29”, “30”, “31”, “32”, “33”, “34”, “35”, “36”, “37”, “38”, “39”, “40”, “41”, “42”, “43”, “44”, “45”, “46”, “47”, “48”, “49”, “50”, “51”, “52”, “53”, “54”, “55”, “56”, “57”, “58”, “59”, “60”, “61”, “62”, “63”, “64”, “65”, “66”, “67”, “68”, “69”, “70”}
	math.randomseed(os.time() * 10)
	rand = math.random(100)
	if rand < 50 then
		bIsCorrect1 = true
		bIsCorrect2 = false
		msg.post("Selection#" .. letters[ Phono1 ], "play_sound", {delay = 2, gain = 0.5})
		--pickedSound = "Selection#" letters[ Phono1 ]
	else 

		bIscorrect1 = false
		bIsCorrect2 = true
		--pickedSound = "Selection#" letters[ Phono2 ]
	end
	msg.post(pickedSound, "play_sound", {delay = 2, gain = 0.5})


end

-- positions are right in front of white box nodes in gui
--[[
local pos1 = vmath.vector3(387, 377, -1)
local pos2 = vmath.vector3(871, 386, -1)
local phonoScale = 1
local props = {}

props[hash("/option1")] = { IsCorrect = 1}
props[hash("/option2")] = { IsCorrect = 2}

local ids = collectionfactory.create("/spawner#collectionfactory", pos1, nil, props, phonoScale)	
--]]

--decides which one is coorect
--generates random boolean
-- bIsCorrect1 is for left phonogram, 2 for right


--[[function on_message(self, message_id, message, sender)
if message_id == hash("Pause") then
	msg.post(receiver, message_id)
end
end]]

function on_input(self, action_id, action)
--testing input
if action_id == hash("click") and action.pressed and self.active then
	local Phono1 = gui.get_node("Phono1")
	local Phono2 = gui.get_node("Phono2")
	if gui.pick_node(Phono1, action.x, action.y) then
		msg.post("#", "hide_Selection")
	elseif gui.pick_node(Phono2, action.x, action.y) then
		msg.post("#", "hide_Selection")
	end

	msg.post("default:/GamescreenProxy#GamescreenLoader", "Resume")
end
end